# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: ci

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

env:
  NODE_ENV: test
  NODE_VERSION: 20.x

jobs:
  # install:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: actions/setup-node@v4
  #       with:
  #         node-version: ${{ matrix.node-version }}
  #         # cache: 'yarn'
  #     - run: yarn install --frozen-lockfile

  typescript:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/install
        with:
          node-version: ${{ env.NODE_VERSION }}

      - run: yarn tsc

  format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/install
        with:
          node-version: ${{ env.NODE_VERSION }}

      - run: yarn formatCheck

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/install
        with:
          node-version: ${{ env.NODE_VERSION }}

      - run: yarn lint

  depcruise:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/install
        with:
          node-version: ${{ env.NODE_VERSION }}

      - run: yarn dc

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/install
        with:
          node-version: ${{ env.NODE_VERSION }}

      - run: yarn testUnit

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/install
        with:
          node-version: ${{ env.NODE_VERSION }}

      - run: |
          cp .env.local.example .env.test
          cat .env.development >> .env.test
          yarn build
