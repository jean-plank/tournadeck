FROM node:20-alpine as base

# Install dependencies only when needed
FROM base AS deps
# Check https://github.com/nodejs/docker-node/tree/b4117f9333da4138b03a546ec926ef50a31506c3#nodealpine to understand why libc6-compat might be needed.
RUN apk add --no-cache libc6-compat
WORKDIR /app

# Install dependencies based on the preferred package manager
COPY package.json yarn.lock* ./

RUN yarn --frozen-lockfile

# Rebuild the source code only when needed
FROM base AS builder
WORKDIR /app
COPY --from=deps /app/node_modules ./node_modules
COPY . .

# Next.js collects completely anonymous telemetry data about general usage.
# Learn more here: https://nextjs.org/telemetry
# Uncomment the following line in case you want to disable telemetry during the build.
ENV NEXT_TELEMETRY_DISABLED 1

RUN yarn build

# Production image, copy all the files and run next
FROM base AS runner
WORKDIR /app

RUN npm i -g sharp

ENV NEXT_SHARP_PATH /usr/local/lib/node_modules/sharp

ENV NODE_ENV production
# Uncomment the following line in case you want to disable telemetry during runtime.
ENV NEXT_TELEMETRY_DISABLED 1

COPY --from=builder /app/public ./public

# Automatically leverage output traces to reduce image size
# https://nextjs.org/docs/advanced-features/output-file-tracing
COPY --from=builder /app/.next/standalone ./
COPY --from=builder /app/.next/static ./.next/static

COPY --from=builder /app/.pbEncryptionKey ./
COPY --from=builder /app/pb_hooks ./pb_hooks
COPY --from=builder /app/pb_migrations ./pb_migrations
COPY --from=builder /app/pocketbase ./
COPY --from=builder /app/podman/entrypoint.sh ./

# PocketBase
EXPOSE 8090

# Next.js
EXPOSE 3000
ENV HOSTNAME 0.0.0.0
ENV PORT 3000

CMD ./entrypoint.sh
