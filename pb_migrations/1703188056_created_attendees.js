/// <reference path="../pb_data/types.d.ts" />
migrate(
  db => {
    const collection = new Collection({
      id: '1sm1qeyu7mzdkdc',
      created: '2023-12-21 19:47:36.293Z',
      updated: '2023-12-21 19:47:36.293Z',
      name: 'attendees',
      type: 'base',
      system: false,
      schema: [
        {
          system: false,
          id: 'rfjv8393',
          name: 'user',
          type: 'relation',
          required: true,
          presentable: false,
          unique: false,
          options: {
            collectionId: '_pb_users_auth_',
            cascadeDelete: false,
            minSelect: null,
            maxSelect: 1,
            displayFields: null,
          },
        },
        {
          system: false,
          id: 'gimrvfga',
          name: 'tournament',
          type: 'relation',
          required: true,
          presentable: false,
          unique: false,
          options: {
            collectionId: '3pbep6z2nrnxa9k',
            cascadeDelete: false,
            minSelect: null,
            maxSelect: 1,
            displayFields: null,
          },
        },
        {
          system: false,
          id: 'j5ss9vdu',
          name: 'puuid',
          type: 'text',
          required: true,
          presentable: false,
          unique: false,
          options: {
            min: null,
            max: null,
            pattern: '',
          },
        },
        {
          system: false,
          id: 'evqbumrz',
          name: 'currentElo',
          type: 'select',
          required: true,
          presentable: false,
          unique: false,
          options: {
            maxSelect: 1,
            values: [
              'iron',
              'bronze',
              'silver',
              'gold',
              'platinum',
              'emerald',
              'diamond',
              'master',
              'grandmaster',
              'challenger',
            ],
          },
        },
        {
          system: false,
          id: 'r0yzjojl',
          name: 'comment',
          type: 'text',
          required: false,
          presentable: false,
          unique: false,
          options: {
            min: null,
            max: null,
            pattern: '',
          },
        },
        {
          system: false,
          id: 'ee3mttxk',
          name: 'role',
          type: 'select',
          required: true,
          presentable: false,
          unique: false,
          options: {
            maxSelect: 1,
            values: ['top', 'jun', 'mid', 'bot', 'sup'],
          },
        },
        {
          system: false,
          id: '9e56on1i',
          name: 'championPool',
          type: 'select',
          required: true,
          presentable: false,
          unique: false,
          options: {
            maxSelect: 1,
            values: ['oneTrick', 'limited', 'modest', 'notBad', 'quiteALot'],
          },
        },
        {
          system: false,
          id: '3eya1ujb',
          name: 'birthplace',
          type: 'text',
          required: true,
          presentable: false,
          unique: false,
          options: {
            min: null,
            max: null,
            pattern: '',
          },
        },
        {
          system: false,
          id: 'nejzg1ed',
          name: 'avatar',
          type: 'file',
          required: true,
          presentable: false,
          unique: false,
          options: {
            mimeTypes: ['image/jpeg', 'image/png', 'image/svg+xml', 'image/gif', 'image/webp'],
            thumbs: [],
            maxSelect: 1,
            maxSize: 5242880,
            protected: false,
          },
        },
        {
          system: false,
          id: '9swtsna1',
          name: 'isCaptain',
          type: 'bool',
          required: true,
          presentable: false,
          unique: false,
          options: {},
        },
        {
          system: false,
          id: 'mulebzrn',
          name: 'seed',
          type: 'text',
          required: false,
          presentable: false,
          unique: false,
          options: {
            min: null,
            max: null,
            pattern: '',
          },
        },
        {
          system: false,
          id: 'belemugs',
          name: 'price',
          type: 'number',
          required: false,
          presentable: false,
          unique: false,
          options: {
            min: null,
            max: null,
            noDecimal: false,
          },
        },
      ],
      indexes: [
        'CREATE UNIQUE INDEX `idx_xRoCn0I` ON `attendees` (\n  `user`,\n  `tournament`\n)',
        'CREATE UNIQUE INDEX `idx_oZnzPPb` ON `attendees` (\n  `tournament`,\n  `puuid`\n)',
      ],
      listRule: null,
      viewRule: null,
      createRule: null,
      updateRule: null,
      deleteRule: null,
      options: {},
    })

    return Dao(db).saveCollection(collection)
  },
  db => {
    const dao = new Dao(db)
    const collection = dao.findCollectionByNameOrId('1sm1qeyu7mzdkdc')
  },
)
